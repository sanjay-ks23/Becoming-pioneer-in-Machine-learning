Good morning, the time right now is 10:54 and the date is 28/02/25, we are starting today with exercise 18, Names, variables, code and functions.
This is where we enter into the fun stuff, Functions.
code :
def print_arg(*args):
    arg1, arg2 = args
    print(f"arg1:{arg1}, arg2:{arg2}")
    
def print_again(arg1, arg2):
    print(f"arg1:{arg1}, arg2:{arg2}")
 
def print_one(arg1):
    print(f"arg1:{arg1}")

def print_nothin():
    print("I have got no value to print")

print_arg("Sanjay", 1)
print_again("Sruthi", 2)
print_one("Only one arg to print")
print_nothin()

#I just wanted to work with the first function print_arg, because I jave never for the feeling of pointers in c while learning and had a hate for the * and &
#So I juts wanted to get over my fear of them 
#and also we get a feel for the function def syntax in this exercise.
the * gets the input as a list and stores them in args

Exercise 19:
manipulating the argument value while calling them and stuff were taught in this exercise:
def ticket_confirmation(name, booked, verified):
    print(f"The ticket was booked by {name}")
    print(f"was the ticket booked : {booked}")
    print(f"was it verified : {verified}")
print("Enter your name and whether the ticket was booked and was it verified accordingly")
name = input()
booking_status = input()
verfication_status = input()
 
ticket_confirmation(name, booking_status, verfication_status)
ticket_confirmation("sruthi", "yes", "no")
ticket_confirmation(name+"20", booking_status, verfication_status)

Exercise 20, combining functions and files together,
from sys import argv

def print_content(f):
    print(f.read())

def move_cursor(f):
    f.seek(0)

def print_a_line(line_number, f):
    print(f"{line_number} : {f.readline()}")

script, file_name = argv

text = open(file_name)
print_content(text)
move_cursor(text)
line_number = 1
print_a_line(line_number, text)
print_a_line(line_number+1, text)
print_a_line(line_number+2, text)
#I have got to stop writing every code into this log and only the ones that are really necessary 

So we got to use files along with functions and moreover how to increment a value, note, I have not incremented the value in my code, but the author explains it in the book.

Exercise 21: we return values using functions:
def add(a,b):
    sum = a+b
    return sum
def difference(a,b):
    diff = a - b
    return diff
def mulitply(a,b):
    prod = a*b
    return prod
def division(a,b):
    div = a/b
    return div

x = float(input("Enter the first value : "))
y = float(input("Enter the next value : "))

age = add(x,y)
iq = difference(x,y)
height = multiply(x,y)
weight = division(x,y)

print(f"there is perosn whose biodata reads as follows, age:{age}, height:{height}, weight:{weight}, iq:{iq}")

exercise 22: What do we know so far?
as th ename suggests, the author asks us to revise everything we have done so far.

I am going to take a break now , It has exactly been one hour since I started today, I think it has been productive so far adn I have come to a conclusion that only after reaching chapter 40, am I allowed to even open leetcode.
All i am going to say about exercise 23 is that it was a load of wass, even though it might be useful to know these i.e, encoding and deconding that strings have to undergo to preoce any meaning in the final bigger context 
Moving onto exercise 24, More practice:
this indeed uses all the concepts taught as of now in the first 23 chapters and combine them into a code for easier revision.
this caught my eye the last line of the code is as follows:
we know that we can use format strings in various syntax and one such sytax is using.format(arg) after the stringi.e,

print(f" We'd have {}beans, {}jars,and {} crates.".format(*formula))
where formula was previously defined as follows:
formula = function_call(arg) and this function returns three values
try to make note of this.
so formula here acts as a list and this list is later called using * to print them in the statement.

I feel a bit drowsy I think I am going to nap for a bit and then continue after my lunch in an hour

Now onto the important parts, exercise 25, oh wait a min, it is titled "even more practice" I guess you know where this is going.
oh wait they have introduced us to more functions to manipulate strings
we get introduced to sorted() function to sort a list of words passed into the function, split(' ') to split words in a sentence depending on the spaces, we can isolate and print any one word of the sentence using pop(), where pop(0) is the first character and this 1 gets incremented based on the position of the word in the sentence and also we use pop(-1) to point from the last words and move to the firsti.e, to move in reverse.
def break_words(sentence):
    words = sentence.split(' ')
    return words

def sort_words(words):
    return sorted(words)

def print_first_word(words):
    first_word = words.pop(0)
    return first_word

def print_last_word(words):
    last_word = words.pop(-1)
    return last_word

def sort_sentence(sentence):
    words = break_words(sentence)
    return sort_words(words)

def print_first_and_last(sentence):
    words = break_words(sentence)
    print_first_word(words)
    print_last_word(words)

def print_first_and_last_sorted(sentence):
    words = sort_sentence(sentence)
    print_first_word(words)
    print_last_word(words)

and we import each of these function like we do for other modules/libraries, we go to the compiler and import the python file without the .py extension, then we call the necssary function like this,

stringmanipulation.print_first_and_last_words(text), 
if this return something then we assign this sentence to a variable.

the next exercise the author asked us to rectify erros from a code and nothing more to it 
Exercise 27 and 28, Memorizing logic and boolean practice, 
alwasy remeber the keywords are 
and, not, or, True, False . you will know why this is difficult if you first read c/c++ as you rfirst programming language.
I have done around 3 hrours of programming today and completed from exercise 17 to 28, from now on we go into the technical stuff and the interesting part and only 10 more before starting leetcode ,array and string stuff.
I might be back today after my workout if that is the case we will go on for another hour and try to complete this 34 today so we atleast start 39 tomorrow.
yellow I am back, we shall start with the exercise 29,
WHAT IF:
we are just going to write a code that utilizes three variables and comapre their values. with just the use of if function and no use of else in here.

exercise 30, Yayyy!!!!!
good number:
in this exercise we will deal with the if and else, 
we get introduced to the syntax of elif and else, elif is just else if together, we can use it as an intermediary until we reach the concluding else statement.
and remember you dont need to write the statements inside if,else, and elif inside a parenthesis.
i.e,
if we need to compare two values.
x = input()
y = input()
if x > y:
   print("x is greater than y")
elif x < y:
   print("x is lesser than y")
else:
   print("They must be equal")
In the next exercise which would be 31, Making decisions, we are introduced to if branches inside if branches, called as nested if condition. I am going to write this code and thats it for today.
and we will start off fresh tomorrow after a quick recap.
now the matter in hand,
code:
print("There are two doors in front of you, door 1 or 2, which would you like to enter? ")
room = int(input())

if room == 1:
    print("There is a bear in front of you and you have to think on your feet",end=' ')
    print("Is the bear in front of you a brown bear or black bear")
    bear = input()
    if bear == "brown":
        print("You make yourself as big as possible")
    elif bear == "black":
        print("Prentent to have died")
    else:
        print("You couldn\'t tell the type of the bear, so you die")

elif room == 2:
    print("There are a bunch of keys and there are two doors in front of you, again")
    print("But only one of the keys kits in anyone of the door, the only way possible is to brute force it as you have no prior knowledge about these door")
    print("Select 1 or 2")
    door = int(input())
    if door == 1:
        print("You have picked the wrong door and you die")
    else:
        print("You have managed to escape via {}, great success!!".format(door))
else:
    print("there are no other options , trying to malpractice has cost you your life, TATA")

#always remember input only gets a string as an input so if comparing using equals to , it give an error , always remember to add int(input(), for every numerical input, this can be int or float, depending upon the scenario/situation.


