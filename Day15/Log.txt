I have been gone for long time and reverted back to my past behaviours, I have to take responsibility, having been rejected from my 1st college, the next result will be out on 27th or something close to it.
I am going to try and solve a few leetcode problems before leaving today.
But I did study the tree chapter from the book.

I solved two tree problems in leetcode and I have decided to hold off trees and graphs for now, as I wont be needing them in pure data science and machin learning streams.
I am starting off with sorting and then searching this week and moving to algo design as soon as I complete these two.

Merge sort:
Divide and Conquer:
Always note that using recursion, to stop the loop we use a conditional statement

def merge(s1,s2,s):
i = j =0
while i+j < len(s):
if j==len(s2) or (i <len(s1) and s1[i] < s2[j]):
s[i+j] = s1[i]
i += 1
else:
s[i+j] = s2[j]
j += 1

def merge_sort(s)
n = len(s)
if n < 2:
return 
mid = n//2
s1 = [0:mid]
s2 = [mid:n]
merge_sort(s1)
merge_sort(s2)

merge(s1,s2,s)

we also saw how to sort two linked list which was actually a question in leetcode

Quick sort:

